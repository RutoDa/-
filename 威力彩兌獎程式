def check(period,user_nums):
    import requests
    from bs4 import BeautifulSoup
    payload = {"__EVENTTARGET":""
           ,"__EVENTARGUMENT":""
           ,"__LASTFOCU":""
           ,"__VIEWSTATE":""
           ,"__VIEWSTATEGENERATOR":"D75607D0"
           ,"__EVENTVALIDATION":"npbCXBYEIDZR/EmiDdhiolgMkuArPHAEmKOcRHaAPiG0Ikf6Hr1CIwie6dJHrphKIVIR2LyZdU7MYB5EFcNx7YBdoYRvPloyOd41Bx1M+nceAS0IeCmvmfiUdUqWiIsXa1Cb0na2CYM4dMb2pM9zWBG4HK+cGPXnOCO2pvcEultgnqdQtLjTxmZO41+9uDAHZ62D4CtsTrgDyEwtycGuZtNJDxQwomV4rXQItHDN605Y85n7VAM/BIgjm2/ZkH+DqakxRWKJDNgurNyi6KDS/NovC5dysIGXdB/x32IM8YxA80wBX5h/nfXzhl1DhXxuBqMljYbnAdVOT9WKW8W2OqmIj++5Yr5TF+HAdib9Kohgi8XHGFLjHFPv1bNKHkelzEPePc8zMJ2/Lrpr9PGaDapUN53/2tGcxpQ5Dwma2QPNhKtuuMcnwpZk3PgFwe9I7uKw81bZh5I2j9EavsFxECRE0pJempeiLKZHWe2AqBzjfh70jt8T7chsIrOwsTT+iC7ii0OFuvCmh1QVmboDHlQnl1Al07/jQiJo2S5dksbbwEvPAR4Wcu/26KcS+rj5b4r6nJfWKXXGAJGlSmXmIPb6QeE0C6FSdg/Oi65yQGd30pxwZoiIBdlopq1g7ZRCF0dPxl/r30x3qAV1c5LkkDPY0B+Ko0PVF6iJGEjycuSvIKG7s77pIAmQj5LvEj2476EG/gFGRAWK57oWjt4quL2euHCKf6UKJYBaZRCtQeLN83/b35f/oSZknCvd95VTW88pbrbK4GDANeyNDgZCeDtnRduRJz9bcbOkoL0AE8O6XMYM4Xylqz3vNL052dlCxNbVYLR+lOQYBI6k0EK3egcMewM="
           ,"SuperLotto638Control_history1$DropDownList1": "1"
           ,"SuperLotto638Control_history1$chk": "radNO"
           ,"SuperLotto638Control_history1$txtNO": period
           ,"SuperLotto638Control_history1$btnSubmit": "查詢"}
    res = requests.post("https://www.taiwanlottery.com.tw/lotto/superlotto638/history.aspx",data = payload)
    payload2 = payload.copy()
    payload2["SuperLotto638Control_history1$txtNO"] = "100"
    res2 = requests.post("https://www.taiwanlottery.com.tw/lotto/superlotto638/history.aspx",data = payload2)
    
    def check_inner():
        soup = BeautifulSoup(res.text)
        id_list = ["#SuperLotto638Control_history1_dlQuery_No1_0","#SuperLotto638Control_history1_dlQuery_No2_0"
                   ,"#SuperLotto638Control_history1_dlQuery_No3_0","#SuperLotto638Control_history1_dlQuery_No4_0"
                   ,"#SuperLotto638Control_history1_dlQuery_No5_0","#SuperLotto638Control_history1_dlQuery_No6_0"
                   ,"#SuperLotto638Control_history1_dlQuery_No7_0"]
        prize_num_list = []
        for id in id_list:
            prize_num_list.append(soup.select(id)[0].text)
        special_num = prize_num_list.pop()
    
        id2_list = ["#SuperLotto638Control_history1_dlQuery_SL638_CategA4_0","#SuperLotto638Control_history1_dlQuery_SL638_CategB4_0"
                    ,"#SuperLotto638Control_history1_dlQuery_SL638_CategC4_0","#SuperLotto638Control_history1_dlQuery_SL638_CategD4_0"
                    ,"#SuperLotto638Control_history1_dlQuery_SL638_CategE4_0","#SuperLotto638Control_history1_dlQuery_SL638_CategF4_0"
                    ,"#SuperLotto638Control_history1_dlQuery_SL638_CategG4_0","#SuperLotto638Control_history1_dlQuery_SL638_CategH4_0"
                    ,"#SuperLotto638Control_history1_dlQuery_SL638_CategJ4_0","#SuperLotto638Control_history1_dlQuery_SL638_CategI4_0"]
        id3_list = ["#SuperLotto638Control_history1_dlQuery_SL638_CategA5_0","#SuperLotto638Control_history1_dlQuery_SL638_CategB5_0"]
        prizes = []
        prizes2 =[]
        for id2 in id2_list:
            prizes.append(soup.select(id2)[0].text)
        
        for id3 in id3_list:
            prizes2.append(soup.select(id3)[0].text)
        
        for prize in prizes[:2]:
            if prize == "0":
                prizes[prizes.index(prize)] = prizes2[prizes.index(prize)]

        index = 0 
        for num in user_nums[:6]:
            if num in prize_num_list:
                index += 1
        special_TF = user_nums[6] == special_num
    

        if index == 6 and special_TF:
            print("""恭喜您中了 "頭獎" ，總獎金為 %s 元"""%(prizes[0]))
        elif index == 6:
            print("""恭喜您中了 "貳獎" ，總獎金為 %s 元"""%(prizes[1]))
        elif index == 5 and special_TF:
            print("""恭喜您中了 "參獎" ，總獎金為 %d 元"""%int(prizes[2]))
        elif index == 5:
            print("""恭喜您中了 "肆獎" ，總獎金為 %d 元"""%int(prizes[3]))
        elif index == 4 and special_TF:
            print("""恭喜您中了 "伍獎" ，總獎金為 %d 元"""%int(prizes[4]))
        elif index == 4:
            print("""恭喜您中了 "陸獎" ，總獎金為 %d 元"""%int(prizes[5]))
        elif index == 3 and special_TF:
            print("""恭喜您中了 "柒獎" ，總獎金為 %d 元"""%int(prizes[6]))
        elif index == 2 and special_TF:
            print("""恭喜您中了 "捌獎" ，總獎金為 %d 元"""%int(prizes[7]))
        elif index == 3:
            print("""恭喜您中了 "玖獎" ，總獎金為 %d 元"""%int(prizes[8]))
        elif index == 1 and special_TF:
            print("""恭喜您中了 "普獎" ，總獎金為 %d 元"""%int(prizes[9]))
        else:
            print("這期沒中獎，下期再接再厲!!~")
    if res.status_code != 200:
        print("不好意思~您的網路連線異常~")
    else:
        
        if  BeautifulSoup(res.text).select("#SuperLotto638Control_history1_Label1")[0] == BeautifulSoup(res2.text).select("#SuperLotto638Control_history1_Label1")[0] :
            print("\n期號錯誤，請確認您的期號是否存在")
            return True
        else:
            check_inner()
            return False

period = input("請輸入期別\n=")
while True:
    ordinary_num = (input("""請輸入第一區號碼\n(注意1:如果是單數，請在前面加一個0，如:01,02)\
                             \n(注意2:號碼與號碼間請以","隔開)\n=""")).split(",")
    error = "\n發現格式錯誤或號碼超出範圍，請再輸入一次"
    index = 0
    for num in ordinary_num:
        if int(num) < 1 or int(num) > 38 or ordinary_num.count(num) > 1:
            index += 1
        if int(num) <10 and num == str(int(num)):
            index += 1
    if index == 0 and len(ordinary_num)==6:
        break
    else:
        print(error)
         
while True:
    special_num = input("請輸入第二區號碼:")
    if int(special_num)<9 and int(special_num)>0 and special_num!=str(int(special_num)):
        break
    print(error)
ordinary_num.append(special_num)

while check(period,ordinary_num):
    period = input("請輸入期別\n=")
    
